#pragma once
void findKthNodeToTailTest();
void findReaptedNumTest();
void  findNumInArrayTest();
void replaceBlankSpaceTest();
void reversePrintListTest();
void createBinaryTreeTest();
void fibonacciTest();
void sortTest();
void findMinInRotateArrayTest();
void hasPathTest();
void robotMoveTest();
void cutRopeTest();
void  numOf1Test();
void powerTest();
void printOneToMaxOfDigitalTest();
void deleteDuplicationTest();
void reMatch();
void isNumericTest();
void entryNodeOfLoopTest();
void reverseListTest();
void mergeTest();
void mirrorRecursivelyTest();
void isSymmetricalTest();
void printMatrixClockwiselyTest();
void isPopOrderTest();
void verifySquenceOfBSTTest();
void findPathTest();
void complexListCloneTest();
void convertTest();
void permutationTest();
void moreThanHalfNumTest();
void getLeastNumbersTest();
void reverseWordsTest();
void reverseStringTest();
void cnaWimNimTest();
int streamMedianTest();
void findGreatSumOfSubArrayTest();
void findStringTest();
void numOfOneTest();    
void digitalAtIndexTest();
void printMinNumberTest();
void translaToStringTest();
void maxValueTest();
void longestSubstringTest();
void uglyNumberTest();
void firstNotRepeatingTest();
void inversePairTest();
void findFirstCommonNodeTest();
void findNumInSortArrayTest();
void kThNodeInBinarySearchTreeTest();
void binaryTreeDepthTest();
void findTwoNumberAppearOneTimeTest();
void kWeakestRowsTest();
void minSetSizeTest();
void sumIsSTest();
void fourSumCountTest();
void maxJumpsTest();
void reverStringTest();
void maxValueInQueueTest();
void probilityTest();
void isContinueTest();
void josephuseTest();
void stockMaxVauleTest();
void arrayRankTransformTest();
void diagonalSortTest();
void breakPalindromeTest();
void mutilpyTest();
void addTest();
void twoTreeNodeCommandFahterTest();
void checkIfExistTest();
void minStepsTest();
void  tweetCountsTest();
void canPartitionTest();
void maxProductTest();
void findTaegetSumWaysTest();
void canPartitionKSubsetsTest();
void coinChangeTest();
void wordBreakTest();
void maxProfitTest();
void  countSubstringsTest();
void longestPalindromeTest();
void flattenTest();
void trieTest();
void findNearNumTest();